@model ML.Usuario

@{
    ViewBag.Title = "Registrar";
    Layout = null;
}

<body>
    <section class="container">
        <div class="login-container">
            <div class="circle circle-one"></div>
            <div class="form-container">

                <span class="error animated tada" id="msg"></span>

                <div name="form1" autocomplete="off" class="box" onsubmit="return checkStuff()">
                    @using (Html.BeginForm("Registrar", "Login", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <form>
                            <div class="register-forget opacity">
                                <h4>Registrar | <span><a style="color: #dc7087; font-weight: 600; text-decoration-line: underline; " href="@Url.Action("IniciarSesion", "Login")">Login </a></span></h4>
                            </div>

                            <div class="register-forget opacity">
                                <h5 class="text-center">Create new account.</h5>
                            </div>

                            <br />

                            @Html.TextBoxFor(model => Model.Nombre, new { placeholder = "Nombre", autocomplete = "off", @class = "form-control", @onkeypress = "return SoloLetras(event, this)", @id = "txtNombre" })
                            <div style="color: red; letter-spacing: 1px;">
                                @Html.ValidationMessageFor(model => Model.Nombre, "", new { @class = "text-danger", @id = "lblNombreErrorMessage" })
                            </div>
                            @Html.TextBoxFor(model => Model.ApellidoPaterno, new { placeholder = "Apellido Paterno", autocomplete = "off", @class = "form-control", @onkeypress = "return SoloLetras(event, this)", @id = "txtApellidoPaterno" })
                            <div style="color: red; letter-spacing: 1px;">
                                @Html.ValidationMessageFor(model => Model.ApellidoPaterno, "", new { @class = "text-danger", @id = "lblApellidoPaternoErrorMessage" })
                            </div>

                            @Html.TextBoxFor(model => Model.ApellidoMaterno, new { placeholder = "Apellido Materno", autocomplete = "off", @class = "form-control", @onkeypress = "return SoloLetras(event, this)", @id = "txtApellidoMaterno" })
                            <div style="color: red; letter-spacing: 1px;">
                                @Html.ValidationMessageFor(model => Model.ApellidoMaterno, "", new { @class = "text-danger", @id = "lblApellidoMaternoErrorMessage" })
                            </div>

                            @Html.TextBoxFor(model => Model.Edad, new { placeholder = "Edad", autocomplete = "off", @class = "form-control", @onkeypress = "return SoloNumeros(event, this)", @id = "txtEdad" })
                            <div style="color: red; letter-spacing: 1px;">
                                @Html.ValidationMessageFor(model => Model.Edad, "", new { @class = "text-danger", @id = "lblEdadErrorMessage" })
                            </div>

                            @Html.TextBoxFor(model => Model.Email, new { placeholder = "E-mail", autocomplete = "off", @class = "form-control", @onpaste = "return false", @id = "txtEmail" })
                            @Html.TextBoxFor(model => Model.Email, new { placeholder = " Confirmar E-mail", autocomplete = "off", @class = "form-control", @onpaste = "return false", @onblur = "return Correo()", @id = "txtConfirmEmail" })
                            <div style="color: red; letter-spacing: 1px;">
                                @Html.ValidationMessageFor(model => Model.Email, "", new { @class = "text-danger", @id = "lblCorreoErrorMessage" })
                            </div>

                            @Html.TextBoxFor(model => Model.Contraseña, new { type = "password", placeholder = "Password", autocomplete = "new-password", @class = "form-control", @onpaste = "return false", @id = "txtContraseña" })
                            @Html.TextBoxFor(model => Model.Contraseña, new { type = "password", placeholder = "Password", autocomplete = "new-password", @class = "form-control", @onpaste = "return false", @onblur = "return ValidationPassword()", @id = "txtConfirmContraseña" })
                            <div style="color: red; letter-spacing: 1px;">
                                @Html.ValidationMessageFor(model => Model.Contraseña, "", new { @class = "text-danger", @id = "lblPasswordErrorMessage" })
                            </div>

                            <br />

                            <div class="col-md-12 text-center" style="margin:50px;">
                                <input type="submit" id="btn1" class="fadeIn fourth" value="Registrar" />
                            </div>

                        </form>
                    }
                </div>

                @if (ViewBag.Message != null)
                {
                    <script type="text/javascript">

                    window.onload = function () {
                    alert("@ViewBag.Message");
                     };
                    </script>
                }
            </div>
        </div>

    </div>
    </section>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">

                    window.onload = function () {
                    alert("@ViewBag.Message");
                    };
        </script>
    }

</body>

<br />
<br />
<br />

<style>
    :root {
        --background: #de95a5;
        --color: #349cac;
        --primary-color: #a9a9a9;
    }

    body {
        background-image: url("https://www.macstoreonline.com.mx/img//lp/business/Logo_MacStore_APR@2x.png");
        background-repeat: no-repeat;
        background-position: center top;
        background-color: #dadada;
        margin: 100px;
        box-sizing: border-box;
        font-family: "poppins";
        letter-spacing: 5px;
        transition: background 0.2s ease;
        -webkit-transition: background 0.2s ease;
        -moz-transition: background 0.2s ease;
        -ms-transition: background 0.2s ease;
        -o-transition: background 0.2s ease;
    }

    * {
        box-sizing: border-box;
    }

    html {
        scroll-behavior: smooth;
    }



    a {
        text-decoration: none;
        color: var(--color);
    }

    h4 {
        font-size: 2.3rem;
    }

    .container {
        margin: 270px;
        display: grid;
        justify-content: center;
        align-items: center;
        height: 20.0rem;
    }

    .login-container {
        position: relative;
        width: 800px;
    }

    .form-container {
        border: 1px solid hsla(0, 0%, 65%, 0.158);
        box-shadow: 0 0 36px 1px rgba(0, 0, 0, 0.2);
        border-radius: 10px;
        backdrop-filter: blur(20px);
        z-index: 99;
        padding: 33px;
        -webkit-border-radius: 10px;
        -moz-border-radius: 10px;
        -ms-border-radius: 10px;
        -o-border-radius: 10px;
    }

    .login-container form input {
        display: block;
        padding: 14.5px;
        width: 100%;
        margin: 2rem 0;
        color: var(rgba(0, 0, 0, 0.2));
        outline: none;
        background-color: #908e8e6e;
        border: none;
        border-radius: 5px;
        font-weight: 500;
        letter-spacing: 0.8px;
        font-size: 15px;
        backdrop-filter: blur(15px);
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        -ms-border-radius: 5px;
        -o-border-radius: 5px;
    }

        .login-container form input:focus {
            box-shadow: 0 0 16px 1px rgba(0, 0, 0, 0.2);
            animation: wobble 0.3s ease-in;
            -webkit-animation: wobble 0.3s ease-in;
        }

    .login-container form button {
        background-color: var(--primary-color);
        color: var(--color);
        display: block;
        padding: 13px;
        border-radius: 5px;
        outline: none;
        font-size: 18px;
        letter-spacing: 1.5px;
        font-weight: bold;
        width: 100%;
        cursor: pointer;
        margin-bottom: 2rem;
        transition: all 0.1s ease-in-out;
        border: none;
        -webkit-border-radius: 5px;
        -moz-border-radius: 5px;
        -ms-border-radius: 5px;
        -o-border-radius: 5px;
        -webkit-transition: all 0.1s ease-in-out;
        -moz-transition: all 0.1s ease-in-out;
        -ms-transition: all 0.1s ease-in-out;
        -o-transition: all 0.1s ease-in-out;
    }

        .login-container form button:hover {
            box-shadow: 0 0 10px 1px rgba(0, 0, 0, 0.15);
            transform: scale(1.02);
            -webkit-transform: scale(1.02);
            -moz-transform: scale(1.02);
            -ms-transform: scale(1.02);
            -o-transform: scale(1.02);
        }

    .circle {
        width: 8rem;
        height: 8rem;
        background: var(--primary-color);
        border-radius: 50%;
        -webkit-border-radius: 50%;
        -moz-border-radius: 50%;
        -ms-border-radius: 50%;
        -o-border-radius: 50%;
        position: absolute;
    }

    .illustration {
        position: absolute;
        top: -14%;
        right: -2px;
        width: 90%;
    }

    .circle-one {
        top: 0;
        left: 0;
        z-index: -1;
        transform: translate(-45%, -45%);
        -webkit-transform: translate(-45%, -45%);
        -moz-transform: translate(-45%, -45%);
        -ms-transform: translate(-45%, -45%);
        -o-transform: translate(-45%, -45%);
    }

    .circle-two {
        bottom: 0;
        right: 0;
        z-index: -1;
        transform: translate(45%, 45%);
        -webkit-transform: translate(45%, 45%);
        -moz-transform: translate(45%, 45%);
        -ms-transform: translate(45%, 45%);
        -o-transform: translate(45%, 45%);
    }

    .register-forget {
        display: flex;
        justify-content: center;
    }

    .opacity {
        opacity: 0.6;
    }

    .theme-btn-container {
        position: absolute;
        left: 0;
        bottom: 2rem;
    }

    .theme-btn {
        cursor: pointer;
        transition: all 0.3s ease-in;
    }

        .theme-btn:hover {
            width: 40px !important;
        }

    @@keyframes wobble {
        0% {
            transform: scale(1.025);
            -webkit-transform: scale(1.025);
            -moz-transform: scale(1.025);
            -ms-transform: scale(1.025);
            -o-transform: scale(1.025);
        }

        25% {
            transform: scale(1);
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            -ms-transform: scale(1);
            -o-transform: scale(1);
        }

        75% {
            transform: scale(1.025);
            -webkit-transform: scale(1.025);
            -moz-transform: scale(1.025);
            -ms-transform: scale(1.025);
            -o-transform: scale(1.025);
        }

        100% {
            transform: scale(1);
            -webkit-transform: scale(1);
            -moz-transform: scale(1);
            -ms-transform: scale(1);
            -o-transform: scale(1);
        }
    }




    input[type=submit] {
        background-color: #dc7087;
        border: none;
        color: white;
        padding: 15px 80px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        text-transform: uppercase;
        font-size: 13px;
        -webkit-box-shadow: 0 10px 30px 0 rgba(95,186,233,0.4);
        box-shadow: 0 10px 30px 0 rgb(0, 0, 0, 0.61);
        -webkit-border-radius: 5px 5px 5px 5px;
        border-radius: 5px 5px 5px 5px;
        margin: 5px 20px 40px 20px;
        -webkit-transition: all 0.3s ease-in-out;
        -moz-transition: all 0.3s ease-in-out;
        -ms-transition: all 0.3s ease-in-out;
        -o-transition: all 0.3s ease-in-out;
        transition: all 0.3s ease-in-out;
    }

        input[type=submit]:hover {
            background-color: #f989a1;
        }

        input[type=submit]:active {
            -moz-transform: scale(0.95);
            -webkit-transform: scale(0.95);
            -o-transform: scale(0.95);
            -ms-transform: scale(0.95);
            transform: scale(0.95);
        }
</style>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />

<script type="text/javascript">

    // ---- Validaciones de los campos
    //evita que el campo de password lo autocomplete
    $(document).ready(function () {
        var some_id = $('#some_id');
        some_id.prop('type', 'text');
        some_id.removeAttr('autocomplete');
    });

    //Validaciones
    function SoloLetras(event, textbox) {
        var id = textbox.id
        var input = event.key
        var palabra = textbox.value


        if (/^[a-zA-Z]+$/.test(input)) {
            if (palabra != "") {
                if (/^[A-Z][a-z]+$/.test(palabra + event.key)) {

                    if (id == "txtNombre") {
                        $("#lblNombreErrorMessage").text("")
                        $("#txtNombre").css('border', '1px solid  #8ae34c', 'border - radius', '4px', 'box - shadow', 'inset 0 1px 1px rgba(0, 0, 0, 0.075)')   //desmarca el textbox que marca error

                    }
                    else {
                        if (id == "txtApellidoPaterno") {
                            $("#lblApellidoPaternoErrorMessage").text("")
                            $("#txtApellidoPaterno").css('border', '1px solid  #8ae34c', 'border - radius', '4px', 'box - shadow', 'inset 0 1px 1px rgba(0, 0, 0, 0.075)')   //desmarca el textbox que marca error

                        }
                        else {
                            if (id == "txtApellidoMaterno") {
                                $("#lblApellidoMaternoErrorMessage").text("")
                                $("#txtApellidoMaterno").css('border', '1px solid  #8ae34c', 'border - radius', '4px', 'box - shadow', 'inset 0 1px 1px rgba(0, 0, 0, 0.075)')   //desmarca el textbox que marca error

                            }
                        }
                    }

                    return true

                }
                else {

                    if (id == "txtNombre") {
                        $("#lblNombreErrorMessage").text("La primer letra debera ser mayuscula")
                        $("#txtNombre").css('border', '1px solid red')
                    } else {
                        if (id == "txtApellidoPaterno") {
                            $("#lblApellidoPaternoErrorMessage").text("La primer letra debera ser mayuscula")
                            $("#txtApellidoPaterno").css('border', '1px solid red')
                        } else {
                            if (id == "txtApellidoMaterno") {
                                $("#lblApellidoMaternoErrorMessage").text("La primer letra debera ser mayuscula")
                                $("#txtApellidoMaterno").css('border', '1px solid red')
                            }
                        }
                    }

                    return false
                }
            }


        } else {
            if (id == "txtNombre") {
                $("#lblNombreErrorMessage").text("Solo se aceptan letras en este campo")
                $("#txtNombre").css('border', '1px solid red')
            } else {
                if (id == "txtApellidoPaterno") {
                    $("#lblApellidoPaternoErrorMessage").text("Solo se aceptan letras en este campo")
                    $("#txtApellidoPaterno").css('border', '1px solid red')
                } else {
                    if (id == "txtApellidoMaterno") {
                        $("#lblApellidoMaternoErrorMessage").text("Solo se aceptan letras en este campo")
                        $("#txtApellidoMaterno").css('border', '1px solid red')
                    }
                }
            }
            return false
        }
    }

    function SoloNumeros(event, textbox) {
        var id = textbox.id
        var input = event.key

        if (textbox.textLength < 3) {
            if (/^[0-9]+$/.test(input)) {
                return true
            }
            else {
                if (id == "txtEdad") {
                    $("#lblEdadErrorMessage").text("Solo se aceptan numeros en este campo")
                    $("#txtEdad").css('border', '1px solid red')
                }
                return false
            }
        } else {

            if (id == "txtEdad") {
                $("#lblEdadErrorMessage").text("Solo se puede ingresar hasta 3 numeros")
                $("#txtEdad").css('border', '1px solid red')
            }
            return false
        }
    }

    function Correo() {
        var correo = document.getElementById('txtEmail').value; //obtiene loa valores del txtContraseña
        var confirm_correo = document.getElementById('txtConfirmEmail').value; //obtiene loa valores del txtConfirmContraseña

        var expresion = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/


        if (correo && confirm_correo == "") { //validacion de si las contraseñas son iguales o no
            $("#lblPasswordErrorMessage").text("Se requiere una contraseña")
            $("#txtContraseña").css('border', '1px solid red')

        } else {

            if (correo == confirm_correo) {

                if (expresion.test(correo)) {

                    $("#lblCorreoErrorMessage").text("") //quita los datos del label de error
                    $("#txtEmail").css('border', '1px solid  #8ae34c', 'border - radius', '4px', 'box - shadow', 'inset 0 1px 1px rgba(0, 0, 0, 0.075)')   //desmarca el textbox que marca error
                    $("#txtConfirmEmail").css('border', '1px solid #8ae34c', 'border - radius', '4px', 'box - shadow', 'inset 0 1px 1px rgba(0, 0, 0, 0.075)')   //desmarca el textbox que marca error

                    return true
                }
                else {

                    $("#lblCorreoErrorMessage").text("Ingrese una direccion de correo valida")
                    $("#txtEmail").css('border', '1px solid red')
                    $("#txtConfirmEmail").css('border', '1px solid red')

                    return false
                }
            } else {

                $("#lblCorreoErrorMessage").text("Los E-mails no coinciden")
                $("#txtEmail").css('border', '1px solid red')
                $("#txtConfirmEmail").css('border', '1px solid red')
            }

        }

    }

    function ValidationPassword() {
        var pass = document.getElementById('txtContraseña').value; //obtiene loa valores del txtContraseña
        var confirm_pass = document.getElementById('txtConfirmContraseña').value; //obtiene loa valores del txtConfirmContraseña

        if (pass && confirm_pass == "") { //validacion de si las contraseñas son iguales o no
            $("#lblPasswordErrorMessage").text("Se requiere una contraseña")
            $("#txtContraseña").css('border', '1px solid red')

        } else {

            if (pass == confirm_pass) {
                if (/^(?=(?:.*\d))(?=.*[A-Z])(?=.*[a-z])(?=.*[.,*!?¿¡/#$%&])\S{8,64}$/.test(pass)) {

                    $("#lblPasswordErrorMessage").text("") //quita los datos del label de error
                    $("#txtContraseña").css('border', '1px solid #8ae34c', 'border - radius', '4px', 'box - shadow', 'inset 0 1px 1px rgba(0, 0, 0, 0.075)')   //desmarca el textbox que marca error
                    $("#txtConfirmContraseña").css('border', '1px solid #8ae34c', 'border - radius', '4px', 'box - shadow', 'inset 0 1px 1px rgba(0, 0, 0, 0.075)')   //desmarca el textbox que marca error
                    return true
                }
                else {

                    $("#lblPasswordErrorMessage").text("La constraseña tiene que tener: " + "- Al menos un número 0 - 9" +
                        "- Al menos una mayúscula" +
                        "- Al menos una minúscula" +
                        "- Al menos un carácter especial(.,* !?¿¡/#$%&)" +
                        "- Longitud mínima de 8 caracteres, 64 máxima" +
                        "- No acepta espacios")
                    $("#txtContraseña").css('border', '1px solid red')
                    $("#txtConfirmContraseña").css('border', '1px solid red')

                    return false
                }
            } else {

                $("#lblPasswordErrorMessage").text("Las contraseñas no coinciden")
                $("#txtContraseña").css('border', '1px solid red')
                $("#txtConfirmContraseña").css('border', '1px solid red')
            }
        }
    }

    // -------------- diseño del login - reistrar
    $(document).ready(function () {
        var some_id = $('#some_id');
        some_id.prop('type', 'text');
        some_id.removeAttr('autocomplete');
    });

    const themes = [
        {
            background: "#1A1A2E",
            color: "#FFFFFF",
            primaryColor: "#0F3460"
        },
        {
            background: "#461220",
            color: "#FFFFFF",
            primaryColor: "#E94560"
        },
        {
            background: "#192A51",
            color: "#FFFFFF",
            primaryColor: "#967AA1"
        },
        {
            background: "#F7B267",
            color: "#000000",
            primaryColor: "#F4845F"
        },
        {
            background: "#F25F5C",
            color: "#000000",
            primaryColor: "#642B36"
        },
        {
            background: "#231F20",
            color: "#FFF",
            primaryColor: "#BB4430"
        }
    ];

    const setTheme = (theme) => {
        const root = document.querySelector(":root");
        root.style.setProperty("--background", theme.background);
        root.style.setProperty("--color", theme.color);
        root.style.setProperty("--primary-color", theme.primaryColor);
        root.style.setProperty("--glass-color", theme.glassColor);
    };

    const displayThemeButtons = () => {
        const btnContainer = document.querySelector(".theme-btn-container");
        themes.forEach((theme) => {
            const div = document.createElement("div");
            div.className = "theme-btn";
            div.style.cssText = `background: ${theme.background}; width: 25px; height: 25px`;
            btnContainer.appendChild(div);
            div.addEventListener("click", () => setTheme(theme));
        });
    };

    displayThemeButtons();


</script>